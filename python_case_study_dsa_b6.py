# -*- coding: utf-8 -*-
"""Python_Case_Study_DSA_B6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CKLy-w_j8Cq4duA1NjXuo12MYo8yHyvS

# Answer the following questions using only builtin Python datatypes and functions. Do not use Numpy or Scipy (i.e. No library imports allowed)

# Q1. Write a function that return the range (maximum and minimun) of a given list of numbers
"""

def range():
  n = [1,2,3,4,5,6,7]
  print("Maximum = ",max(n))
  print("Minimum = ",min(n))
range()

"""## Q2. Write function that returns mean value of a list of numbers"""

def mean():
  x = [1,2,3,4,5]
  n = len(x)
  a = sum(x)
  print("Mean value = ", a/n)
mean()

"""# Q3. Write a function that returns the median value of a list of numbers"""

def median():
  x = [2,5,1,4,6]
  x.sort()
  n = len(x)
  m1 = x[n//2]
  m2 = x[n//2 + 1]
  if n%2 == 0:
    print("Median = ",x[n//2] - x[n//2 + 1])
  else:
    print("Median = ",x[n//2])

median()

"""## Q4. Write a function to return the mod of a list of numbers, if no mod exists, it should return None. If more than one mod exist, return the mod values as list"""



"""## Q5. Write function to compute a given percentile value (e.g. 90th percentile) of a list of numbers"""

def percentile():
  n = [1,2,3,4,5,6,7]
  x = len(n)
  p = int(input("Enter the percentile : "))
  b = int(p/100 * x + 1)
  print(n[b-1])
percentile()

"""# Q6. Write a function that returns the lower bound of a list of numbers"""

def lower():
  x = [4,1,5,2]
  x.sort()
  n = len(x)
  q1 = int(25/100) * (n+1)
  q2 = (50/100) * (n+1)
  q3 = int(75/100) * (n+1)
  iqr = x[q3] - x[q1-1]
  lb = x[q1-1]- 1.5 * iqr
  print(lb)


lower()

"""## Q7. Write function to return any outliers from a given list of numbers, if no outliers present it should return None"""

def outliers():
  x = [4,1,5,2]
  x.sort()
  n = len(x)
  q1 = (25/100) * (n+1)
  q2 = (50/100) * (n+1)
  q3 = (75/100) * (n+1)
  iqr = q3 - q1
  lb = q1 - 1.5 * iqr
  ub = q3 + 1.5 * iqr
  outlier = []
  for i in x:
    if i < lb or i > ub:
      outlier.append(i)
  if outlier:
    return outlier
  else:
      return None

outliers()
print(outliers())

"""##Q8. Write a function to return standard deviation of a list of numbers"""

def standard_deviation():
  x = [1,2,3,4,5]
  n = len(x)
  a = sum(x)
  c = a/n
  print('Mean = ',c)
  variance = sum((i - c) ** 2 for i in x)/n
  print("Variance = ", variance)
  sd = variance ** 0.5
  print('Standard deviation =',sd)

standard_deviation()

"""## Q9. Write function to compute and return Z-score values of a list of numbers"""

def z_score():
  x = [1,2,3,4,5]
  n = len(x)
  a = sum(x)
  c = a/n
  print('Mean = ',c)
  variance = sum((i - c) ** 2 for i in x)/n
  print("Variance = ", variance)
  sd = variance ** 0.5
  print('Standard deviation =',sd)
  for i in x:
     z=(i-c)/sd
     print("Z_score = ",z)
z_score()

"""## Q10. Write a function to compute and return the Pearson correlation coefficient value of two list of numbers"""

